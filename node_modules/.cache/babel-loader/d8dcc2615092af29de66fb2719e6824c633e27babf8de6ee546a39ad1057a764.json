{"ast":null,"code":"var _jsxFileName = \"/Users/minato/art/okaku/app_test/whole-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [isRecording, setIsRecording] = useState(false);\n  const [recognizedText, setRecognizedText] = useState('');\n  const [originalText, setOriginalText] = useState('');\n  const [transformedText, setTransformedText] = useState('');\n  const [displayText, setDisplayText] = useState('');\n  const [generatedImage, setGeneratedImage] = useState(null);\n  const [ttsUrl, setTtsUrl] = useState(null);\n  const [musicUrl, setMusicUrl] = useState(null);\n  const mediaRecorderRef = useRef(null);\n  const handleStartRecording = () => {\n    setIsRecording(true);\n    navigator.mediaDevices.getUserMedia({\n      audio: true\n    }).then(stream => {\n      const mediaRecorder = new MediaRecorder(stream, {\n        mimeType: 'audio/webm'\n      });\n      mediaRecorderRef.current = mediaRecorder;\n      mediaRecorder.start().catch(error => {\n        console.error('Error accessing microphone:', error);\n      });\n      mediaRecorder.ondataavailable = event => {\n        const audioBlob = new Blob([event.data], {\n          type: 'audio/webm'\n        });\n        const formData = new FormData();\n        formData.append('audio', audioBlob, 'audio.webm');\n        fetch('http://127.0.0.1:5000/recognize', {\n          method: 'POST',\n          body: formData\n        }).then(response => response.json()).then(data => {\n          setRecognizedText(data.recognized_text);\n          setOriginalText(data.original_text);\n          setTransformedText(data.transformed_text);\n          setDisplayText(data.recognized_text);\n          generateImage(data.transformed_text);\n          generateMusic(data.transformed_text);\n          textToSpeech(data.transformed_text);\n        }).catch(error => console.error('Error:', error));\n      };\n      mediaRecorder.onstop = () => {\n        setIsRecording(false);\n      };\n    });\n  };\n  const handleStopRecording = () => {\n    mediaRecorderRef.current.stop();\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      const transformedTextWithHighlight = transformedText.split(originalText).join(`<span style=\"color: red;\">${recognizedText}</span>`);\n      setDisplayText(transformedTextWithHighlight);\n    }\n  };\n  const generateImage = transformedText => {\n    fetch('http://127.0.0.1:5000/generate-image', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        transformed_text: transformedText\n      })\n    }).then(response => response.json()).then(data => setGeneratedImage(data.imagePath)).catch(error => console.error('Error:', error));\n  };\n  const generateMusic = transformedText => {\n    fetch('http://127.0.0.1:5000/generate-music', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        transformed_text: transformedText\n      })\n    }).then(response => response.json()).then(data => setMusicUrl(`http://127.0.0.1:5000/audio/${data.musicPath}`)).catch(error => console.error('Error:', error));\n  };\n  const textToSpeech = transformedText => {\n    fetch('http://127.0.0.1:5000/text-to-speech', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        transformed_text: transformedText\n      })\n    }).then(response => response.json()).then(data => setTtsUrl(`http://127.0.0.1:5000/audio/${data.ttsPath}`)).catch(error => console.error('Error:', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onMouseDown: handleStartRecording,\n      onMouseUp: handleStopRecording,\n      onTouchStart: handleStartRecording,\n      onTouchEnd: handleStopRecording,\n      children: isRecording ? 'Recording...' : 'Record'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: displayText\n      },\n      onKeyDown: handleKeyPress,\n      tabIndex: \"0\",\n      style: {\n        whiteSpace: 'pre-wrap'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), generatedImage && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: generatedImage,\n      alt: \"Generated\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 26\n    }, this), ttsUrl && /*#__PURE__*/_jsxDEV(\"audio\", {\n      src: ttsUrl,\n      controls: true,\n      autoPlay: true,\n      onEnded: () => musicUrl && new Audio(musicUrl).play()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"ZWD/yhTeZDJIZ84XvR1M3CgB+gg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","App","_s","isRecording","setIsRecording","recognizedText","setRecognizedText","originalText","setOriginalText","transformedText","setTransformedText","displayText","setDisplayText","generatedImage","setGeneratedImage","ttsUrl","setTtsUrl","musicUrl","setMusicUrl","mediaRecorderRef","handleStartRecording","navigator","mediaDevices","getUserMedia","audio","then","stream","mediaRecorder","MediaRecorder","mimeType","current","start","catch","error","console","ondataavailable","event","audioBlob","Blob","data","type","formData","FormData","append","fetch","method","body","response","json","recognized_text","original_text","transformed_text","generateImage","generateMusic","textToSpeech","onstop","handleStopRecording","stop","handleKeyPress","e","key","transformedTextWithHighlight","split","join","headers","JSON","stringify","imagePath","musicPath","ttsPath","children","onMouseDown","onMouseUp","onTouchStart","onTouchEnd","fileName","_jsxFileName","lineNumber","columnNumber","dangerouslySetInnerHTML","__html","onKeyDown","tabIndex","style","whiteSpace","src","alt","controls","autoPlay","onEnded","Audio","play","_c","$RefreshReg$"],"sources":["/Users/minato/art/okaku/app_test/whole-app/src/App.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\n\nconst App = () => {\n  const [isRecording, setIsRecording] = useState(false);\n  const [recognizedText, setRecognizedText] = useState('');\n  const [originalText, setOriginalText] = useState('');\n  const [transformedText, setTransformedText] = useState('');\n  const [displayText, setDisplayText] = useState('');\n  const [generatedImage, setGeneratedImage] = useState(null);\n  const [ttsUrl, setTtsUrl] = useState(null);\n  const [musicUrl, setMusicUrl] = useState(null);\n  const mediaRecorderRef = useRef(null);\n\n  const handleStartRecording = () => {\n    setIsRecording(true);\n    navigator.mediaDevices.getUserMedia({ audio: true }).then(stream => {\n      const mediaRecorder = new MediaRecorder(stream, { mimeType: 'audio/webm' });\n      mediaRecorderRef.current = mediaRecorder;\n      mediaRecorder.start().catch(error => {\nconsole.error('Error accessing microphone:', error);\n});\n\n      mediaRecorder.ondataavailable = event => {\n        const audioBlob = new Blob([event.data], { type: 'audio/webm' });\n        const formData = new FormData();\n        formData.append('audio', audioBlob, 'audio.webm');\n\n        fetch('http://127.0.0.1:5000/recognize', {\n          method: 'POST',\n          body: formData\n        })\n        .then(response => response.json())\n        .then(data => {\n          setRecognizedText(data.recognized_text);\n          setOriginalText(data.original_text);\n          setTransformedText(data.transformed_text);\n          setDisplayText(data.recognized_text);\n          generateImage(data.transformed_text);\n          generateMusic(data.transformed_text);\n          textToSpeech(data.transformed_text);\n        })\n        .catch(error => console.error('Error:', error));\n      };\n\n      mediaRecorder.onstop = () => {\n        setIsRecording(false);\n      };\n    });\n  };\n\n  const handleStopRecording = () => {\n    mediaRecorderRef.current.stop();\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter') {\n      const transformedTextWithHighlight = transformedText.split(originalText).join(\n        `<span style=\"color: red;\">${recognizedText}</span>`\n      );\n      setDisplayText(transformedTextWithHighlight);\n    }\n  };\n\n  const generateImage = (transformedText) => {\n    fetch('http://127.0.0.1:5000/generate-image', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ transformed_text: transformedText })\n    })\n    .then(response => response.json())\n    .then(data => setGeneratedImage(data.imagePath))\n    .catch(error => console.error('Error:', error));\n  };\n\n  const generateMusic = (transformedText) => {\n    fetch('http://127.0.0.1:5000/generate-music', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ transformed_text: transformedText })\n    })\n    .then(response => response.json())\n    .then(data => setMusicUrl(`http://127.0.0.1:5000/audio/${data.musicPath}`))\n    .catch(error => console.error('Error:', error));\n  };\n\n  const textToSpeech = (transformedText) => {\n    fetch('http://127.0.0.1:5000/text-to-speech', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ transformed_text: transformedText })\n    })\n    .then(response => response.json())\n    .then(data => setTtsUrl(`http://127.0.0.1:5000/audio/${data.ttsPath}`))\n    .catch(error => console.error('Error:', error));\n  };\n\n  return (\n    <div>\n      <button\n        onMouseDown={handleStartRecording}\n        onMouseUp={handleStopRecording}\n        onTouchStart={handleStartRecording}\n        onTouchEnd={handleStopRecording}\n      >\n        {isRecording ? 'Recording...' : 'Record'}\n      </button>\n      <div\n        dangerouslySetInnerHTML={{ __html: displayText }}\n        onKeyDown={handleKeyPress}\n        tabIndex=\"0\"\n        style={{ whiteSpace: 'pre-wrap' }}\n      />\n      {generatedImage && <img src={generatedImage} alt=\"Generated\" />}\n      {ttsUrl && (\n        <audio src={ttsUrl} controls autoPlay onEnded={() => musicUrl && new Audio(musicUrl).play()} />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}